`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 05/15/2018 10:55:17 AM
// Design Name: 
// Module Name: main
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module main(sw, seg, dp, an, led);
    input  [15:0] sw;                        //16位拨动开关
    output [6:0] seg;                       //7段数码管驱动,低电平有效
    output dp;
    output [7:0] an;                        //7段数码管片选信号,低电平有效
    output [15:0] led;                      //16位led显示,高电平有效
    
    _7Seg_Driver_Decode a(sw, seg, dp, an, led);
    
endmodule

//////////////////////////////////
// 模块功能：7段数码显示管直接驱动模块
//////////////////////////////////

module _7Seg_Driver_Direct(sw, seg, dp, an, led);
    input  [15:0] sw;                        //16位拨动开关

    output [6:0] seg;  //7段数码管驱动,低电平有效
    output dp;
    output [7:0] an;                        //7段数码管片选信号,低电平有效
    output [15:0] led;                      //16位led显示,高电平有效

    assign  led[15:0] = sw[15:0];           //将led赋值为相应的开关

    assign  seg[6:0] = sw[6:0];
    assign  dp = sw[7];
    assign  an[7:0] = ~sw[15:8];            //将sw[15:8]赋值给数码管片选信号AN[7:0]

endmodule

//////////////////////////////////
// 模块功能：译码驱动7段数码管
//////////////////////////////////
module _7Seg_Driver_Decode(sw, seg, dp, an, led);
    input   [15:0] sw;                        //16位拨动开关

    output  [6:0] seg;                       //7段数码管驱动,低电平有效
    output  [7:0] an;                        //7段数码管片选信号,低电平有效
    output  [15:0] led;                      //16位led显示
    output  dp;

    reg [6:0] seg;
    reg [3:0] num;
    reg dp;
    
    assign  led[15:0] = sw[15:0];
    assign  an[7:0] = ~sw[15:8];
    
    initial
    begin
            num[3:0] = seg[3:0];
            dp = 1'b1;
    end
    
    always
    @(sw[15:0])begin
        num[3:0] =  seg[3:0];
        case(num)
        4 'b0000:
            seg [6:0] = 7'b1000000;
        4 'b0001:
            seg [6:0] = 7'b1111001;
        4 'b0010:
            seg [6:0] = 7'b0100100;
        4 'b0011:
            seg [6:0] = 7'b0110000;
        4 'b0100:
            seg [6:0] = 7'b0011001;
        4 'b0101:
            seg [6:0] = 7'b0010010;
        4 'b0110:
            seg [6:0] = 7'b0000010;
        4 'b0111:
            seg [6:0] = 7'b1111000;
        4 'b1000:
            seg [6:0] = 7'b0000000;
        4 'b1001:
            seg [6:0] = 7'b0011000;
        4 'b1010:
            seg [6:0] = 7'b0001000;
        4 'b1011:
            seg [6:0] = 7'b0000011;
        4 'b1100:
            seg [6:0] = 7'b1000110;
        4 'b1101:
            seg [6:0] = 7'b0100001;
        4 'b1110:
            seg [6:0] = 7'b0000110;
        4 'b1111:
            seg [6:0] = 7'b0001110;
        endcase
    end
endmodule
